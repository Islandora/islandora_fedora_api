<?php

// $Id:$

/**
 * $file
 *
 * A wrapper for the Fedora Repository's API-A and API-M calls.  Function names
 * match the naming and capitalization conventions of the SOAP functions.
 */

/**
 * Implementation of hook_entity_info().
 * @return array 
 */
function fedora_api_entity_info() {
  $return = array (
    'fedora_api_connection' => array (
      'label' => t('Fedora connection'),
      'controller class' => 'FedoraAPIConnectionController',
      'base table' => 'fedora_api_connection',
      'entity keys' => array (
        'id' => 'cid',
        'label' => 'name',
      ),
      'fieldable' => TRUE,
    ),
  );
  
  return $return;
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function fedora_api_permission() {
  $permissions = array();
  $permissions['administer fedora'] = array (
      'title' => t('Administer Fedora Commons Repository'),
      'description' => t('Set up the connection to a Fedora Commons repository and define default collection information for this site.'),
      'restrict access' => TRUE,
  );
  return $permissions;
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function fedora_api_menu() {
  $items = array();
  $items['admin/config/fedora_repository/server'] = array(
    'title' => t('Fedora Server Settings'),
    'description' => t('Enter the Fedora Collection information here'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('fedora_api_settings'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/config/fedora_repository/server'] = array(
    'title' => 'Fedora Server Settings',
    'description' => 'Configure Fedora Repository API server',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('fedora_api_settings'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 0,
    'access arguments' => array('administer fedora api'),
  );
  return $items;
}

/**
 * Creates teh administration settings page to let the user specify the location
 * of the Fedora Repository server.
 */
function fedora_api_settings($form, &$form_state) {
  $form = array();
  $form['fedora_server_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Fedora server URL'),
    '#default_value' => variable_get('fedora_server_url', 'http://localhost:8080/fedora'),
    '#description' => t('The Fedora server URL'),
    '#required' => TRUE,
    '#weight' => -10,
  );
  $form['fedora_user'] = array(
    '#type' => 'textfield',
    '#title' => 'Fedora User',
    '#default_value' => variable_get('fedora_user', 'fedoraAdmin'),
    '#description' => t('The username to use when connecting to the Fedora server. Only set this if you wish to bypass the Fedora Drupal Servlet Filter'),
    '#required' => FALSE,
    '#weight' => -9,
  );
  $form['fedora_password'] = array(
    '#type' => 'textfield',
    '#title' => 'Password',
    '#default_value' => variable_get('fedora_password', ''),
    '#description' => t('Password for this Fedora user.'),
    '#required' => FALSE,
    '#weight' => -8,
  );

  //$form['#submit'][] = 'fedora_repository_admin_settings_submit';
  $form['#weight'] = 10;
  return system_settings_form($form);
}

function fedora_api_valid_pid($pid) {
  $valid = FALSE;
  if (strlen(trim($pid)) <= 64 && preg_match('/^([A-Za-z0-9]|-|\.)+:(([A-Za-z0-9])|-|\.|~|_|(%[0-9A-F]{2}))+$/', trim($pid))) {
    $valid = TRUE;
  }

  return $valid;
}

/**
 * Return an array of all fedora connection objects.
 *
 * @return
 *   An array of all connection objects, indexed by cid.
 */
function fedora_api_get_connections() {
  return fedora_api_connection_load_multiple(FALSE, array());
}

/**
 * Load multiple fedora connections based on certain conditions.
 *
 * This function should be used whenever you need to load more than one
 * connection from the database. Connections are loaded into memory and will not
 * require database access if loaded again during the same page request.
 *
 * @see entity_load()
 *
 * @param $cids
 *  An array of fedora connection IDs, or FALSE to load all connections.
 * @param $conditions
 *  An array of conditions to add to the query.
 *
 * @return
 *  An array of connection objects, indexed by cid.
 */
function fedora_api_connection_load_multiple($cids = array(), $conditions = array()) {
  return entity_load('fedora_api_connection', $cids, $conditions);
}